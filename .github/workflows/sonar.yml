name: Sonar Full Stack

on:
  push:
    branches:
      - master
  pull_request:
    branches: [master]

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [17]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'temurin' # Alternative distribution options are available

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('*/.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Add local.properties for Android
        run: |
          touch android-app/local.properties
          echo jwsSigningKey=\"${{ secrets.SIGNING_KEY }}\" >> android-app/local.properties

      - name: Build and analyze frontend
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        working-directory: ./android-app
        run: ./gradlew build sonarqube --info

      - name: Setup docker
        run: |
          cd backend
          docker compose up -d --build

      - name: Prepare Database
        run: |
          cd backend
          docker compose run --rm django python manage.py makemigrations
          docker compose run --rm django python manage.py migrate

      - name: Analyze backend with SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        working-directory: ./backend
        run: sonar-scanner
